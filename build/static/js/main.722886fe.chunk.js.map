{"version":3,"sources":["Components/NavigationCMenu.js","Components/NavigationC.js","Components/Header.js","Components/Footer.js","Components/Loader.js","Components/ProductCard.js","Views/Home.js","Views/About.js","Views/Products.js","App.js","serviceWorker.js","index.js"],"names":["NavigationCMenu","props","className","to","onClick","closeMenu","Navigationc","useState","showMenu","setShowMenu","maskTransitions","useTransition","from","position","opacity","enter","leave","menuTransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","Loader","ProductCard","product","images","imageUrl","Home","url","loading","data","error","products","setProducts","useEffect","axios","get","then","response","catch","content","About","Products","id","useParams","setProduct","name","src","imagesUrl","alt","price","description","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.722886fe.chunk.js","sourcesContent":["import React from 'react' \nimport { Link } from 'react-router-dom'\n\nfunction NavigationCMenu(props){\n    return(\n        <div> \n            <div className=\"font-bold py-3\">\n                The menu\n            </div>\n            <ul>\n                <li>\n                    <Link \n                        to = \"/\" \n                        className = \"text-blue-500 py-3 border-t border-b block\"\n                        onClick = {props.closeMenu}\n                    >\n                        Home\n                    </Link>\n                </li>\n            \n                <li>\n                    <Link \n                        to = \"/about\" \n                        className = \"text-blue-500 py-3 border-b block\"\n                        onClick = {props.closeMenu}\n                    >\n                        About\n                    </Link>\n                </li>\n            </ul> \n        </div>\n    )\n}\n\nexport default NavigationCMenu","\nimport React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport {useTransition, animated} from 'react-spring'\nimport Menu from './NavigationCMenu'\n\nfunction Navigationc(){\n    const [showMenu, setShowMenu] = useState(false)\n\n    const maskTransitions = useTransition(showMenu, null, {\n        from: { position: \"absolute\", opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    })\n\n    const menuTransitions = useTransition(showMenu, null, {\n        from: { opacity: 0, transform: \"translateX(-100%)\" },\n        enter: { opacity: 1, transform: \"translateX(0%)\" },\n        leave: { opacity: 0, transform: \"translateX(-100%)\" },\n    })\n\n    return (\n        <nav>\n            <span className=\"text-xl\">\n                <FontAwesomeIcon \n                    icon = {faBars}\n                    onClick = {() => setShowMenu(!showMenu)}\n                />\n            </span>\n\n            {\n                maskTransitions.map(({ item, key, props }) =>\n                    item && \n                    <animated.div \n                        key = {key} \n                        style = {props}\n                        className = \"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\n                        onClick = {() => setShowMenu(false)}\n                    >\n                    </animated.div>\n                )\n            }\n\n            {\n                menuTransitions.map(({ item, key, props }) =>\n                    item && \n                    <animated.div \n                        key = {key} \n                        style = {props}\n                        className = \"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\"\n                    >\n                        <Menu \n                            closeMenu = {() => setShowMenu(false)}\n                        />\n\n                    </animated.div>\n                )\n            }\n        </nav>\n    )\n}\n\n\nexport default Navigationc","import React from 'react'\n// import Navigation from './NavigationH'\n//diff for git\nimport Navigation from './NavigationC'\n\nfunction Header(){\n    return (\n        <header className = \"border-b p-3 flex justify-between item-center\">\n            <span className = \"font-bold\">\n                My First App\n            </span>\n\n\n            <Navigation />\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nfunction Footer(){\n    return(\n        <footer className = \"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full\"> \n            &copy; Copyright 2020\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction Loader(){\n    return(\n        <div className = \"flex justify-center\">\n            <div className = \"loader\"></div>\n        </div>\n    )\n}\n\nexport default Loader","import React from 'react'\n\nfunction ProductCard(props){\n    return(\n        <div className = \"border mb-4 rounded overflow-hidden\">\n            <div\n                style ={{\n                    'backgroundImage': `url('${props.product.images[0].imageUrl}')`,\n                }}\n                className = \"w-full h-64  bg-blue  bg-cover\"\n            >\n                \n            </div>\n        </div>\n    )\n}\n\nexport default ProductCard","import React, { useState, useEffect  } from 'react' \nimport axios from 'axios'\n// import HelloUser from \"../Components/HelloUser\"\nimport Loader from '../Components/Loader'\nimport ProductCard from '../Components/ProductCard'\n\n\nfunction Home(){\n    const url = `https://5ee6c64c52bb0500161fcfbc.mockapi.io/products?page=1&limit=10`\n    const [products , setProducts] = useState({\n        loading: false,\n        data: null,\n        error: false\n    })\n\n    useEffect(() => {\n        setProducts({\n            loading: true,\n            data: null,\n            error: false\n        })\n        axios.get(url)\n            .then(response => {\n                setProducts({\n                    loading: false,\n                     data: response.data,\n                     error: false\n                })\n            })\n            .catch(() => {\n                setProducts({\n                    loading: false,\n                    data: null,\n                    error: true\n                })\n            })\n    }, [url])\n    \n    let content = null\n\n    if(products.error){\n        content = <p>\n            Error occured! Please refresh or try again later.\n        </p>\n    }\n\n    if(products.loading){\n        content = <Loader></Loader>\n    }\n\n    if(products.data){\n        content =\n            products.data.map((product, key) =>\n                <div> \n                    <ProductCard \n                        product = {product}\n                    />\n                </div>\n            )\n    \n    }\n\n    return(\n        <div>\n            <h1 className = \"font-bold text-2xl\"> \n                Best Sellers\n            </h1>\n            {content}\n        </div>\n    )\n}\n\nexport default Home","import React from 'react' \n\nfunction About(){\n    return(\n        <div>\n            <h1 className = \"font-bold text-2xl mb-3\">  About us </h1>\n            <p>\n                About page content.\n            </p>\n        </div>\n    )\n}\n\nexport default About","import React, { useState, useEffect  } from 'react' \nimport axios from 'axios'\nimport{ useParams } from 'react-router-dom'\nimport Loader from '../Components/Loader'\n\nfunction Products(){\n    const { id } = useParams()\n    const url = `https://5ee6c64c52bb0500161fcfbc.mockapi.io/products/${id}`\n    const [product, setProduct] = useState({\n        loading: false,\n        data: null,\n        error: false\n    })\n\n    let content = null\n    \n    useEffect(() => {\n        setProduct({\n            loading: true,\n            data: null,\n            error: false\n        })\n        axios.get(url)\n            .then(response => {\n                setProduct({\n                    loading: false,\n                    data: response.data,\n                    error: false\n                })\n            })\n            .catch(() => {\n                setProduct({\n                    loading: false,\n                    data: null,\n                    error: true\n                })\n            })\n    }, [url])\n\n    if(product.error){\n        content = <p>\n            Error occured! Please refresh or try again later.\n        </p>\n    }\n\n    if(product.loading){\n        content = <Loader></Loader>\n    }\n\n    if(product.data){\n        content =\n            <div>\n                \n                <h1 className = \"text-2xl font-bold mb-3\">\n                    {product.name}\n                </h1>\n\n                <div>\n                    <img \n                        src = {product.data.images[0].imagesUrl}\n                        alt = {product.data.name}\n                    />\n                </div>\n\n                <div className = \"font-bold text-xl mb-3\">\n                    $ {product.data.price}\n                </div>\n\n                <div>\n                    {product.data.description}\n                </div>\n            </div>\n    \n    }\n    \n    return(\n        <div>\n              {content}\n        </div>\n    )\n}\n\nexport default Products","import React from 'react';\n// import Counter from './Components/Counter'\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport Home from './Views/Home'\nimport About from './Views/About'\nimport Products from './Views/Products'\n\nfunction App() {\n  return (\n    <div>\n      \n    \n      <Router> \n\n        <Header />\n\n        <div className = \"p-3\">\n\n          <Switch> \n\n            <Route exact path =\"/\"> \n              <Home />\n            </Route>\n\n            <Route path = \"/about\"> \n              <About />\n            </Route>\n\n            <Route path = \"/products/:id\"> \n              <Products />\n            </Route>\n\n          </Switch>\n\n        </div>\n          \n\n          <Footer />\n\n      </Router>\n      \n      \n\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}